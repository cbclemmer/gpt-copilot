{
    "name": "gpt-copilot",
    "displayName": "GPT CoPilot",
    "description": "GPT-3 powered code explanation and documentation assistant",
    "publisher": "parallel-universe",
    "pricing": "Free",
    "categories": [
        "Machine Learning",
        "Testing",
        "Debuggers"
    ],
    "keywords": [
        "GPT-3",
        "GPT3",
        "GPT",
        "AI",
        "OpenAI",
        "ML",
        "Machine Learning"
    ],
    "version": "0.0.4",
    "private": true,
    "engines": {
        "vscode": "^1.74.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/parallel-universe/gpt-copilot"
    },
    "icon": "images/logo.png",
    "activationEvents": [],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "gpt-copilot.explain_selection",
                "title": "GPT - Explain Selection"
            },
            {
                "command": "gpt-copilot.ask_about_selection",
                "title": "GPT - Ask About Selection"
            },
            {
                "command": "gpt-copilot.explain_file",
                "title": "GPT - Explain File"
            },
            {
                "command": "gpt-copilot.ask_about_file",
                "title": "GPT - Ask About File"
            },
            {
                "command": "gpt-copilot.ask_anything",
                "title": "GPT - Ask Anything"
            },
            {
                "command": "gpt-copilot.setup",
                "title": "GPT - Setup"
            },
            {
                "command": "gpt-copilot.sync_file",
                "title": "GPT - Sync current file"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "when": "editorHasSelection",
                    "command": "gpt-copilot.explain_selection",
                    "group": "z_commands"
                },
                {
                    "when": "editorHasSelection",
                    "command": "gpt-copilot.ask_about_selection",
                    "group": "z_commands"
                },
                {
                    "when": "!editorHasSelection",
                    "command": "gpt-copilot.explain_file",
                    "group": "z_commands"
                },
                {
                    "when": "!editorHasSelection",
                    "command": "gpt-copilot.ask_about_file",
                    "group": "z_commands"
                },
                {
                    "command": "gpt-copilot.ask_anything",
                    "group": "z_commands"
                },
                {
                    "command": "gpt-copilot.sync_file",
                    "group": "z_commands"
                }
            ]
        },
        "configuration": {
            "title": "gpt-copilot",
            "properties": {
                "gpt-copilot.model": {
                    "type": "string",
                    "default": "text-davinci-003",
                    "markdownDescription": "[Model](https://beta.openai.com/docs/models)"
                },
                "gpt-copilot.maxTokens": {
                    "type": "number",
                    "default": 1500,
                    "minimum": 1,
                    "maximum": 4000,
                    "markdownDescription": "Max [tokens](https://beta.openai.com/docs/introduction/overview) (max 4000)"
                },
                "gpt-copilot.temperature": {
                    "type": "number",
                    "default": 0.1,
                    "minimum": 0,
                    "maximum": 1,
                    "markdownDescription": "[Temperature](https://beta.openai.com/docs/api-reference/completions/create#completions/create-temperature). Between 0 and 1"
                },
                "gpt-copilot.org": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "[Organization](https://beta.openai.com/account/org-settings)"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint \"src/**/*.ts\"",
        "watch": "tsc -watch -p ./",
        "test": "node ./out/test/runTest.js"
    },
    "dependencies": {
        "openai": "^3.1.0"
    },
    "devDependencies": {
        "@types/glob": "^8.0.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^16.11.7",
        "@types/vscode": "^1.73.0",
        "@typescript-eslint/eslint-plugin": "^5.42.0",
        "@typescript-eslint/parser": "^5.42.0",
        "@vscode/test-electron": "^2.2.1",
        "eslint": "^8.30.0",
        "glob": "^8.0.3",
        "mocha": "^10.2.0",
        "ts-mockito": "^2.6.1",
        "ts-standard": "^12.0.2",
        "typescript": "^4.8.4"
    }
}
